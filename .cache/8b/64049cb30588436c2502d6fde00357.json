{"id":"../../node_modules/bintrees/lib/bintree.js","dependencies":[{"name":"/Users/fodediop/dev/backend/0x-starter-project/package.json","includedInParent":true,"mtime":1541472665906},{"name":"/Users/fodediop/dev/backend/0x-starter-project/node_modules/bintrees/package.json","includedInParent":true,"mtime":1541472826793},{"name":"./treebase","loc":{"line":2,"column":23},"parent":"/Users/fodediop/dev/backend/0x-starter-project/node_modules/bintrees/lib/bintree.js","resolved":"/Users/fodediop/dev/backend/0x-starter-project/node_modules/bintrees/lib/treebase.js"}],"generated":{"js":"\nvar TreeBase = require('./treebase');\n\nfunction Node(data) {\n    this.data = data;\n    this.left = null;\n    this.right = null;\n}\n\nNode.prototype.get_child = function(dir) {\n    return dir ? this.right : this.left;\n};\n\nNode.prototype.set_child = function(dir, val) {\n    if(dir) {\n        this.right = val;\n    }\n    else {\n        this.left = val;\n    }\n};\n\nfunction BinTree(comparator) {\n    this._root = null;\n    this._comparator = comparator;\n    this.size = 0;\n}\n\nBinTree.prototype = new TreeBase();\n\n// returns true if inserted, false if duplicate\nBinTree.prototype.insert = function(data) {\n    if(this._root === null) {\n        // empty tree\n        this._root = new Node(data);\n        this.size++;\n        return true;\n    }\n\n    var dir = 0;\n\n    // setup\n    var p = null; // parent\n    var node = this._root;\n\n    // search down\n    while(true) {\n        if(node === null) {\n            // insert new node at the bottom\n            node = new Node(data);\n            p.set_child(dir, node);\n            ret = true;\n            this.size++;\n            return true;\n        }\n\n        // stop if found\n        if(this._comparator(node.data, data) === 0) {\n            return false;\n        }\n\n        dir = this._comparator(node.data, data) < 0;\n\n        // update helpers\n        p = node;\n        node = node.get_child(dir);\n    }\n};\n\n// returns true if removed, false if not found\nBinTree.prototype.remove = function(data) {\n    if(this._root === null) {\n        return false;\n    }\n\n    var head = new Node(undefined); // fake tree root\n    var node = head;\n    node.right = this._root;\n    var p = null; // parent\n    var found = null; // found item\n    var dir = 1;\n\n    while(node.get_child(dir) !== null) {\n        p = node;\n        node = node.get_child(dir);\n        var cmp = this._comparator(data, node.data);\n        dir = cmp > 0;\n\n        if(cmp === 0) {\n            found = node;\n        }\n    }\n\n    if(found !== null) {\n        found.data = node.data;\n        p.set_child(p.right === node, node.get_child(node.left === null));\n\n        this._root = head.right;\n        this.size--;\n        return true;\n    }\n    else {\n        return false;\n    }\n};\n\nmodule.exports = BinTree;\n\n","map":{"mappings":[{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../../node_modules/bintrees/lib/bintree.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}}],"sources":{"../../node_modules/bintrees/lib/bintree.js":"\nvar TreeBase = require('./treebase');\n\nfunction Node(data) {\n    this.data = data;\n    this.left = null;\n    this.right = null;\n}\n\nNode.prototype.get_child = function(dir) {\n    return dir ? this.right : this.left;\n};\n\nNode.prototype.set_child = function(dir, val) {\n    if(dir) {\n        this.right = val;\n    }\n    else {\n        this.left = val;\n    }\n};\n\nfunction BinTree(comparator) {\n    this._root = null;\n    this._comparator = comparator;\n    this.size = 0;\n}\n\nBinTree.prototype = new TreeBase();\n\n// returns true if inserted, false if duplicate\nBinTree.prototype.insert = function(data) {\n    if(this._root === null) {\n        // empty tree\n        this._root = new Node(data);\n        this.size++;\n        return true;\n    }\n\n    var dir = 0;\n\n    // setup\n    var p = null; // parent\n    var node = this._root;\n\n    // search down\n    while(true) {\n        if(node === null) {\n            // insert new node at the bottom\n            node = new Node(data);\n            p.set_child(dir, node);\n            ret = true;\n            this.size++;\n            return true;\n        }\n\n        // stop if found\n        if(this._comparator(node.data, data) === 0) {\n            return false;\n        }\n\n        dir = this._comparator(node.data, data) < 0;\n\n        // update helpers\n        p = node;\n        node = node.get_child(dir);\n    }\n};\n\n// returns true if removed, false if not found\nBinTree.prototype.remove = function(data) {\n    if(this._root === null) {\n        return false;\n    }\n\n    var head = new Node(undefined); // fake tree root\n    var node = head;\n    node.right = this._root;\n    var p = null; // parent\n    var found = null; // found item\n    var dir = 1;\n\n    while(node.get_child(dir) !== null) {\n        p = node;\n        node = node.get_child(dir);\n        var cmp = this._comparator(data, node.data);\n        dir = cmp > 0;\n\n        if(cmp === 0) {\n            found = node;\n        }\n    }\n\n    if(found !== null) {\n        found.data = node.data;\n        p.set_child(p.right === node, node.get_child(node.left === null));\n\n        this._root = head.right;\n        this.size--;\n        return true;\n    }\n    else {\n        return false;\n    }\n};\n\nmodule.exports = BinTree;\n\n"},"lineCount":109}},"hash":"1a76811229b33785951329a8ba33b3bb","cacheData":{"env":{}}}