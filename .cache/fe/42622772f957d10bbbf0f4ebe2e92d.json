{"id":"../../node_modules/bintrees/lib/treebase.js","dependencies":[{"name":"/Users/fodediop/dev/backend/0x-starter-project/package.json","includedInParent":true,"mtime":1541472665906},{"name":"/Users/fodediop/dev/backend/0x-starter-project/node_modules/bintrees/package.json","includedInParent":true,"mtime":1541472826793}],"generated":{"js":"\nfunction TreeBase() {}\n\n// removes all nodes from the tree\nTreeBase.prototype.clear = function() {\n    this._root = null;\n    this.size = 0;\n};\n\n// returns node data if found, null otherwise\nTreeBase.prototype.find = function(data) {\n    var res = this._root;\n\n    while(res !== null) {\n        var c = this._comparator(data, res.data);\n        if(c === 0) {\n            return res.data;\n        }\n        else {\n            res = res.get_child(c > 0);\n        }\n    }\n\n    return null;\n};\n\n// returns iterator to node if found, null otherwise\nTreeBase.prototype.findIter = function(data) {\n    var res = this._root;\n    var iter = this.iterator();\n\n    while(res !== null) {\n        var c = this._comparator(data, res.data);\n        if(c === 0) {\n            iter._cursor = res;\n            return iter;\n        }\n        else {\n            iter._ancestors.push(res);\n            res = res.get_child(c > 0);\n        }\n    }\n\n    return null;\n};\n\n// Returns an iterator to the tree node at or immediately after the item\nTreeBase.prototype.lowerBound = function(item) {\n    var cur = this._root;\n    var iter = this.iterator();\n    var cmp = this._comparator;\n\n    while(cur !== null) {\n        var c = cmp(item, cur.data);\n        if(c === 0) {\n            iter._cursor = cur;\n            return iter;\n        }\n        iter._ancestors.push(cur);\n        cur = cur.get_child(c > 0);\n    }\n\n    for(var i=iter._ancestors.length - 1; i >= 0; --i) {\n        cur = iter._ancestors[i];\n        if(cmp(item, cur.data) < 0) {\n            iter._cursor = cur;\n            iter._ancestors.length = i;\n            return iter;\n        }\n    }\n\n    iter._ancestors.length = 0;\n    return iter;\n};\n\n// Returns an iterator to the tree node immediately after the item\nTreeBase.prototype.upperBound = function(item) {\n    var iter = this.lowerBound(item);\n    var cmp = this._comparator;\n\n    while(iter.data() !== null && cmp(iter.data(), item) === 0) {\n        iter.next();\n    }\n\n    return iter;\n};\n\n// returns null if tree is empty\nTreeBase.prototype.min = function() {\n    var res = this._root;\n    if(res === null) {\n        return null;\n    }\n\n    while(res.left !== null) {\n        res = res.left;\n    }\n\n    return res.data;\n};\n\n// returns null if tree is empty\nTreeBase.prototype.max = function() {\n    var res = this._root;\n    if(res === null) {\n        return null;\n    }\n\n    while(res.right !== null) {\n        res = res.right;\n    }\n\n    return res.data;\n};\n\n// returns a null iterator\n// call next() or prev() to point to an element\nTreeBase.prototype.iterator = function() {\n    return new Iterator(this);\n};\n\n// calls cb on each node's data, in order\nTreeBase.prototype.each = function(cb) {\n    var it=this.iterator(), data;\n    while((data = it.next()) !== null) {\n        if(cb(data) === false) {\n            return;\n        }\n    }\n};\n\n// calls cb on each node's data, in reverse order\nTreeBase.prototype.reach = function(cb) {\n    var it=this.iterator(), data;\n    while((data = it.prev()) !== null) {\n        if(cb(data) === false) {\n            return;\n        }\n    }\n};\n\n\nfunction Iterator(tree) {\n    this._tree = tree;\n    this._ancestors = [];\n    this._cursor = null;\n}\n\nIterator.prototype.data = function() {\n    return this._cursor !== null ? this._cursor.data : null;\n};\n\n// if null-iterator, returns first node\n// otherwise, returns next node\nIterator.prototype.next = function() {\n    if(this._cursor === null) {\n        var root = this._tree._root;\n        if(root !== null) {\n            this._minNode(root);\n        }\n    }\n    else {\n        if(this._cursor.right === null) {\n            // no greater node in subtree, go up to parent\n            // if coming from a right child, continue up the stack\n            var save;\n            do {\n                save = this._cursor;\n                if(this._ancestors.length) {\n                    this._cursor = this._ancestors.pop();\n                }\n                else {\n                    this._cursor = null;\n                    break;\n                }\n            } while(this._cursor.right === save);\n        }\n        else {\n            // get the next node from the subtree\n            this._ancestors.push(this._cursor);\n            this._minNode(this._cursor.right);\n        }\n    }\n    return this._cursor !== null ? this._cursor.data : null;\n};\n\n// if null-iterator, returns last node\n// otherwise, returns previous node\nIterator.prototype.prev = function() {\n    if(this._cursor === null) {\n        var root = this._tree._root;\n        if(root !== null) {\n            this._maxNode(root);\n        }\n    }\n    else {\n        if(this._cursor.left === null) {\n            var save;\n            do {\n                save = this._cursor;\n                if(this._ancestors.length) {\n                    this._cursor = this._ancestors.pop();\n                }\n                else {\n                    this._cursor = null;\n                    break;\n                }\n            } while(this._cursor.left === save);\n        }\n        else {\n            this._ancestors.push(this._cursor);\n            this._maxNode(this._cursor.left);\n        }\n    }\n    return this._cursor !== null ? this._cursor.data : null;\n};\n\nIterator.prototype._minNode = function(start) {\n    while(start.left !== null) {\n        this._ancestors.push(start);\n        start = start.left;\n    }\n    this._cursor = start;\n};\n\nIterator.prototype._maxNode = function(start) {\n    while(start.right !== null) {\n        this._ancestors.push(start);\n        start = start.right;\n    }\n    this._cursor = start;\n};\n\nmodule.exports = TreeBase;\n\n","map":{"mappings":[{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../../node_modules/bintrees/lib/treebase.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}}],"sources":{"../../node_modules/bintrees/lib/treebase.js":"\nfunction TreeBase() {}\n\n// removes all nodes from the tree\nTreeBase.prototype.clear = function() {\n    this._root = null;\n    this.size = 0;\n};\n\n// returns node data if found, null otherwise\nTreeBase.prototype.find = function(data) {\n    var res = this._root;\n\n    while(res !== null) {\n        var c = this._comparator(data, res.data);\n        if(c === 0) {\n            return res.data;\n        }\n        else {\n            res = res.get_child(c > 0);\n        }\n    }\n\n    return null;\n};\n\n// returns iterator to node if found, null otherwise\nTreeBase.prototype.findIter = function(data) {\n    var res = this._root;\n    var iter = this.iterator();\n\n    while(res !== null) {\n        var c = this._comparator(data, res.data);\n        if(c === 0) {\n            iter._cursor = res;\n            return iter;\n        }\n        else {\n            iter._ancestors.push(res);\n            res = res.get_child(c > 0);\n        }\n    }\n\n    return null;\n};\n\n// Returns an iterator to the tree node at or immediately after the item\nTreeBase.prototype.lowerBound = function(item) {\n    var cur = this._root;\n    var iter = this.iterator();\n    var cmp = this._comparator;\n\n    while(cur !== null) {\n        var c = cmp(item, cur.data);\n        if(c === 0) {\n            iter._cursor = cur;\n            return iter;\n        }\n        iter._ancestors.push(cur);\n        cur = cur.get_child(c > 0);\n    }\n\n    for(var i=iter._ancestors.length - 1; i >= 0; --i) {\n        cur = iter._ancestors[i];\n        if(cmp(item, cur.data) < 0) {\n            iter._cursor = cur;\n            iter._ancestors.length = i;\n            return iter;\n        }\n    }\n\n    iter._ancestors.length = 0;\n    return iter;\n};\n\n// Returns an iterator to the tree node immediately after the item\nTreeBase.prototype.upperBound = function(item) {\n    var iter = this.lowerBound(item);\n    var cmp = this._comparator;\n\n    while(iter.data() !== null && cmp(iter.data(), item) === 0) {\n        iter.next();\n    }\n\n    return iter;\n};\n\n// returns null if tree is empty\nTreeBase.prototype.min = function() {\n    var res = this._root;\n    if(res === null) {\n        return null;\n    }\n\n    while(res.left !== null) {\n        res = res.left;\n    }\n\n    return res.data;\n};\n\n// returns null if tree is empty\nTreeBase.prototype.max = function() {\n    var res = this._root;\n    if(res === null) {\n        return null;\n    }\n\n    while(res.right !== null) {\n        res = res.right;\n    }\n\n    return res.data;\n};\n\n// returns a null iterator\n// call next() or prev() to point to an element\nTreeBase.prototype.iterator = function() {\n    return new Iterator(this);\n};\n\n// calls cb on each node's data, in order\nTreeBase.prototype.each = function(cb) {\n    var it=this.iterator(), data;\n    while((data = it.next()) !== null) {\n        if(cb(data) === false) {\n            return;\n        }\n    }\n};\n\n// calls cb on each node's data, in reverse order\nTreeBase.prototype.reach = function(cb) {\n    var it=this.iterator(), data;\n    while((data = it.prev()) !== null) {\n        if(cb(data) === false) {\n            return;\n        }\n    }\n};\n\n\nfunction Iterator(tree) {\n    this._tree = tree;\n    this._ancestors = [];\n    this._cursor = null;\n}\n\nIterator.prototype.data = function() {\n    return this._cursor !== null ? this._cursor.data : null;\n};\n\n// if null-iterator, returns first node\n// otherwise, returns next node\nIterator.prototype.next = function() {\n    if(this._cursor === null) {\n        var root = this._tree._root;\n        if(root !== null) {\n            this._minNode(root);\n        }\n    }\n    else {\n        if(this._cursor.right === null) {\n            // no greater node in subtree, go up to parent\n            // if coming from a right child, continue up the stack\n            var save;\n            do {\n                save = this._cursor;\n                if(this._ancestors.length) {\n                    this._cursor = this._ancestors.pop();\n                }\n                else {\n                    this._cursor = null;\n                    break;\n                }\n            } while(this._cursor.right === save);\n        }\n        else {\n            // get the next node from the subtree\n            this._ancestors.push(this._cursor);\n            this._minNode(this._cursor.right);\n        }\n    }\n    return this._cursor !== null ? this._cursor.data : null;\n};\n\n// if null-iterator, returns last node\n// otherwise, returns previous node\nIterator.prototype.prev = function() {\n    if(this._cursor === null) {\n        var root = this._tree._root;\n        if(root !== null) {\n            this._maxNode(root);\n        }\n    }\n    else {\n        if(this._cursor.left === null) {\n            var save;\n            do {\n                save = this._cursor;\n                if(this._ancestors.length) {\n                    this._cursor = this._ancestors.pop();\n                }\n                else {\n                    this._cursor = null;\n                    break;\n                }\n            } while(this._cursor.left === save);\n        }\n        else {\n            this._ancestors.push(this._cursor);\n            this._maxNode(this._cursor.left);\n        }\n    }\n    return this._cursor !== null ? this._cursor.data : null;\n};\n\nIterator.prototype._minNode = function(start) {\n    while(start.left !== null) {\n        this._ancestors.push(start);\n        start = start.left;\n    }\n    this._cursor = start;\n};\n\nIterator.prototype._maxNode = function(start) {\n    while(start.right !== null) {\n        this._ancestors.push(start);\n        start = start.right;\n    }\n    this._cursor = start;\n};\n\nmodule.exports = TreeBase;\n\n"},"lineCount":236}},"hash":"b53237cc1439d2c2a8e76a30c7ec6745","cacheData":{"env":{}}}