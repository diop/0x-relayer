{"id":"../../node_modules/bintrees/lib/rbtree.js","dependencies":[{"name":"/Users/fodediop/dev/backend/0x-starter-project/package.json","includedInParent":true,"mtime":1541472665906},{"name":"/Users/fodediop/dev/backend/0x-starter-project/node_modules/bintrees/package.json","includedInParent":true,"mtime":1541472826793},{"name":"./treebase","loc":{"line":2,"column":23},"parent":"/Users/fodediop/dev/backend/0x-starter-project/node_modules/bintrees/lib/rbtree.js","resolved":"/Users/fodediop/dev/backend/0x-starter-project/node_modules/bintrees/lib/treebase.js"}],"generated":{"js":"\nvar TreeBase = require('./treebase');\n\nfunction Node(data) {\n    this.data = data;\n    this.left = null;\n    this.right = null;\n    this.red = true;\n}\n\nNode.prototype.get_child = function(dir) {\n    return dir ? this.right : this.left;\n};\n\nNode.prototype.set_child = function(dir, val) {\n    if(dir) {\n        this.right = val;\n    }\n    else {\n        this.left = val;\n    }\n};\n\nfunction RBTree(comparator) {\n    this._root = null;\n    this._comparator = comparator;\n    this.size = 0;\n}\n\nRBTree.prototype = new TreeBase();\n\n// returns true if inserted, false if duplicate\nRBTree.prototype.insert = function(data) {\n    var ret = false;\n\n    if(this._root === null) {\n        // empty tree\n        this._root = new Node(data);\n        ret = true;\n        this.size++;\n    }\n    else {\n        var head = new Node(undefined); // fake tree root\n\n        var dir = 0;\n        var last = 0;\n\n        // setup\n        var gp = null; // grandparent\n        var ggp = head; // grand-grand-parent\n        var p = null; // parent\n        var node = this._root;\n        ggp.right = this._root;\n\n        // search down\n        while(true) {\n            if(node === null) {\n                // insert new node at the bottom\n                node = new Node(data);\n                p.set_child(dir, node);\n                ret = true;\n                this.size++;\n            }\n            else if(is_red(node.left) && is_red(node.right)) {\n                // color flip\n                node.red = true;\n                node.left.red = false;\n                node.right.red = false;\n            }\n\n            // fix red violation\n            if(is_red(node) && is_red(p)) {\n                var dir2 = ggp.right === gp;\n\n                if(node === p.get_child(last)) {\n                    ggp.set_child(dir2, single_rotate(gp, !last));\n                }\n                else {\n                    ggp.set_child(dir2, double_rotate(gp, !last));\n                }\n            }\n\n            var cmp = this._comparator(node.data, data);\n\n            // stop if found\n            if(cmp === 0) {\n                break;\n            }\n\n            last = dir;\n            dir = cmp < 0;\n\n            // update helpers\n            if(gp !== null) {\n                ggp = gp;\n            }\n            gp = p;\n            p = node;\n            node = node.get_child(dir);\n        }\n\n        // update root\n        this._root = head.right;\n    }\n\n    // make root black\n    this._root.red = false;\n\n    return ret;\n};\n\n// returns true if removed, false if not found\nRBTree.prototype.remove = function(data) {\n    if(this._root === null) {\n        return false;\n    }\n\n    var head = new Node(undefined); // fake tree root\n    var node = head;\n    node.right = this._root;\n    var p = null; // parent\n    var gp = null; // grand parent\n    var found = null; // found item\n    var dir = 1;\n\n    while(node.get_child(dir) !== null) {\n        var last = dir;\n\n        // update helpers\n        gp = p;\n        p = node;\n        node = node.get_child(dir);\n\n        var cmp = this._comparator(data, node.data);\n\n        dir = cmp > 0;\n\n        // save found node\n        if(cmp === 0) {\n            found = node;\n        }\n\n        // push the red node down\n        if(!is_red(node) && !is_red(node.get_child(dir))) {\n            if(is_red(node.get_child(!dir))) {\n                var sr = single_rotate(node, dir);\n                p.set_child(last, sr);\n                p = sr;\n            }\n            else if(!is_red(node.get_child(!dir))) {\n                var sibling = p.get_child(!last);\n                if(sibling !== null) {\n                    if(!is_red(sibling.get_child(!last)) && !is_red(sibling.get_child(last))) {\n                        // color flip\n                        p.red = false;\n                        sibling.red = true;\n                        node.red = true;\n                    }\n                    else {\n                        var dir2 = gp.right === p;\n\n                        if(is_red(sibling.get_child(last))) {\n                            gp.set_child(dir2, double_rotate(p, last));\n                        }\n                        else if(is_red(sibling.get_child(!last))) {\n                            gp.set_child(dir2, single_rotate(p, last));\n                        }\n\n                        // ensure correct coloring\n                        var gpc = gp.get_child(dir2);\n                        gpc.red = true;\n                        node.red = true;\n                        gpc.left.red = false;\n                        gpc.right.red = false;\n                    }\n                }\n            }\n        }\n    }\n\n    // replace and remove if found\n    if(found !== null) {\n        found.data = node.data;\n        p.set_child(p.right === node, node.get_child(node.left === null));\n        this.size--;\n    }\n\n    // update root and make it black\n    this._root = head.right;\n    if(this._root !== null) {\n        this._root.red = false;\n    }\n\n    return found !== null;\n};\n\nfunction is_red(node) {\n    return node !== null && node.red;\n}\n\nfunction single_rotate(root, dir) {\n    var save = root.get_child(!dir);\n\n    root.set_child(!dir, save.get_child(dir));\n    save.set_child(dir, root);\n\n    root.red = true;\n    save.red = false;\n\n    return save;\n}\n\nfunction double_rotate(root, dir) {\n    root.set_child(!dir, single_rotate(root.get_child(!dir), !dir));\n    return single_rotate(root, dir);\n}\n\nmodule.exports = RBTree;\n","map":{"mappings":[{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../../node_modules/bintrees/lib/rbtree.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}}],"sources":{"../../node_modules/bintrees/lib/rbtree.js":"\nvar TreeBase = require('./treebase');\n\nfunction Node(data) {\n    this.data = data;\n    this.left = null;\n    this.right = null;\n    this.red = true;\n}\n\nNode.prototype.get_child = function(dir) {\n    return dir ? this.right : this.left;\n};\n\nNode.prototype.set_child = function(dir, val) {\n    if(dir) {\n        this.right = val;\n    }\n    else {\n        this.left = val;\n    }\n};\n\nfunction RBTree(comparator) {\n    this._root = null;\n    this._comparator = comparator;\n    this.size = 0;\n}\n\nRBTree.prototype = new TreeBase();\n\n// returns true if inserted, false if duplicate\nRBTree.prototype.insert = function(data) {\n    var ret = false;\n\n    if(this._root === null) {\n        // empty tree\n        this._root = new Node(data);\n        ret = true;\n        this.size++;\n    }\n    else {\n        var head = new Node(undefined); // fake tree root\n\n        var dir = 0;\n        var last = 0;\n\n        // setup\n        var gp = null; // grandparent\n        var ggp = head; // grand-grand-parent\n        var p = null; // parent\n        var node = this._root;\n        ggp.right = this._root;\n\n        // search down\n        while(true) {\n            if(node === null) {\n                // insert new node at the bottom\n                node = new Node(data);\n                p.set_child(dir, node);\n                ret = true;\n                this.size++;\n            }\n            else if(is_red(node.left) && is_red(node.right)) {\n                // color flip\n                node.red = true;\n                node.left.red = false;\n                node.right.red = false;\n            }\n\n            // fix red violation\n            if(is_red(node) && is_red(p)) {\n                var dir2 = ggp.right === gp;\n\n                if(node === p.get_child(last)) {\n                    ggp.set_child(dir2, single_rotate(gp, !last));\n                }\n                else {\n                    ggp.set_child(dir2, double_rotate(gp, !last));\n                }\n            }\n\n            var cmp = this._comparator(node.data, data);\n\n            // stop if found\n            if(cmp === 0) {\n                break;\n            }\n\n            last = dir;\n            dir = cmp < 0;\n\n            // update helpers\n            if(gp !== null) {\n                ggp = gp;\n            }\n            gp = p;\n            p = node;\n            node = node.get_child(dir);\n        }\n\n        // update root\n        this._root = head.right;\n    }\n\n    // make root black\n    this._root.red = false;\n\n    return ret;\n};\n\n// returns true if removed, false if not found\nRBTree.prototype.remove = function(data) {\n    if(this._root === null) {\n        return false;\n    }\n\n    var head = new Node(undefined); // fake tree root\n    var node = head;\n    node.right = this._root;\n    var p = null; // parent\n    var gp = null; // grand parent\n    var found = null; // found item\n    var dir = 1;\n\n    while(node.get_child(dir) !== null) {\n        var last = dir;\n\n        // update helpers\n        gp = p;\n        p = node;\n        node = node.get_child(dir);\n\n        var cmp = this._comparator(data, node.data);\n\n        dir = cmp > 0;\n\n        // save found node\n        if(cmp === 0) {\n            found = node;\n        }\n\n        // push the red node down\n        if(!is_red(node) && !is_red(node.get_child(dir))) {\n            if(is_red(node.get_child(!dir))) {\n                var sr = single_rotate(node, dir);\n                p.set_child(last, sr);\n                p = sr;\n            }\n            else if(!is_red(node.get_child(!dir))) {\n                var sibling = p.get_child(!last);\n                if(sibling !== null) {\n                    if(!is_red(sibling.get_child(!last)) && !is_red(sibling.get_child(last))) {\n                        // color flip\n                        p.red = false;\n                        sibling.red = true;\n                        node.red = true;\n                    }\n                    else {\n                        var dir2 = gp.right === p;\n\n                        if(is_red(sibling.get_child(last))) {\n                            gp.set_child(dir2, double_rotate(p, last));\n                        }\n                        else if(is_red(sibling.get_child(!last))) {\n                            gp.set_child(dir2, single_rotate(p, last));\n                        }\n\n                        // ensure correct coloring\n                        var gpc = gp.get_child(dir2);\n                        gpc.red = true;\n                        node.red = true;\n                        gpc.left.red = false;\n                        gpc.right.red = false;\n                    }\n                }\n            }\n        }\n    }\n\n    // replace and remove if found\n    if(found !== null) {\n        found.data = node.data;\n        p.set_child(p.right === node, node.get_child(node.left === null));\n        this.size--;\n    }\n\n    // update root and make it black\n    this._root = head.right;\n    if(this._root !== null) {\n        this._root.red = false;\n    }\n\n    return found !== null;\n};\n\nfunction is_red(node) {\n    return node !== null && node.red;\n}\n\nfunction single_rotate(root, dir) {\n    var save = root.get_child(!dir);\n\n    root.set_child(!dir, save.get_child(dir));\n    save.set_child(dir, root);\n\n    root.red = true;\n    save.red = false;\n\n    return save;\n}\n\nfunction double_rotate(root, dir) {\n    root.set_child(!dir, single_rotate(root.get_child(!dir), !dir));\n    return single_rotate(root, dir);\n}\n\nmodule.exports = RBTree;\n"},"lineCount":219}},"hash":"a3679e9aa12ac4e9cfddb25b3dd0961f","cacheData":{"env":{}}}